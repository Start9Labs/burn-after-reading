id: burn-after-reading
title: "Burn After Reading"
version: 0.1.6
release-notes: |
  * Base image updated to alpine 3.18
  * Smaller and optimised build
license: GNU
wrapper-repo: "https://github.com/Start9Labs/burn-after-reading"
upstream-repo: "https://github.com/Start9Labs/burn-after-reading"
support-site: "https://matrix.to/#/!lMnRwPWnyQvOfAoEnD:matrix.start9labs.com"
marketing-site: "https://start9.com"
build: ["make"]
description:
  short: Share messages and files that are destroyed after they are viewed
  long: |
    A simple, fast, standalone service that uses Tor (.onion) ephemeral links to share encrypted messages and files that are destroyed (burned) after they are viewed. Content is stored directly on the Embassy, and there are no trusted 3rd parties.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: tini
  args: ["/usr/local/bin/burn-after-reading"]
  mounts:
    main: /root
  io-format: yaml
health-checks:
  interface:
    name: Web Interface
    success-message: The user interface is ready to visit in a web browser
    type: script
config:
  get:
    type: script
  set:
    type: script
properties:
  type: script
dependencies: {}
volumes:
  main:
    type: data
alerts: {}
interfaces:
  main:
    name: Web Interface
    description: Main user interface for interacting with Burn After Reading in a web browser.
    tor-config:
      port-mapping:
        80: "80"
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
